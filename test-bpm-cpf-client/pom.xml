<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>test-bpm-cpf-parent</artifactId>
    <groupId>it.gov.mef.cloudify</groupId>
    <version>1.0</version>
  </parent>

  <artifactId>test-bpm-cpf-client</artifactId>
  <packaging>war</packaging>

  <name>test-bpm-cpf-client</name>
  <!-- FIXME change it to the project's website -->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <org.kie.version>6.5.0.Final-redhat-7</org.kie.version>
    <version.org.drools>6.5.0.Final-redhat-7</version.org.drools>
    <version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-15</version.jboss.spec.javaee.6.0>
  </properties>
  
  <dependencyManagement>
  	<dependencies>
  		<dependency>
  			<groupId>org.kie</groupId>
			<artifactId>kie-bom</artifactId>
			<version>${org.kie.version}</version>
			<type>pom</type>
			<scope>import</scope>
  		</dependency>
  		
  		<!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
                of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
                of artifacts. We use this here so that we always get the correct versions 
                of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
                the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
                any version of JBoss EAP that implements Java EE 6. -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-6.0</artifactId>
                <version>${version.jboss.spec.javaee.6.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
  		
  	</dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-web</artifactId>
	    <version>1.5.1.RELEASE</version>
	    <exclusions>
	    	<exclusion>
	    		<groupId>org.hibernate.validator</groupId>
	    		<artifactId>hibernate-validator</artifactId>
	    	</exclusion>
	    	<exclusion>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-logging</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.hibernate</groupId>
	    		<artifactId>hibernate-validator</artifactId>
	    	</exclusion>
	    </exclusions>
	</dependency>
    
    <dependency>
	     <groupId>org.springframework.boot</groupId>
	     <artifactId>spring-boot-starter-log4j2</artifactId>
	     <version>1.5.1.RELEASE</version>
	</dependency>
	
	<dependency>
		<groupId>it.gov.mef.cloudify</groupId>
	 	<artifactId>test-bpm-cpf-model</artifactId>
    	<version>${project.version}</version>
	</dependency>
    
	<dependency>
  			<groupId>org.kie</groupId>
			<artifactId>kie-api</artifactId>
  	</dependency>
  	
  	<dependency>
            <groupId>org.kie.server</groupId>
            <artifactId>kie-server-api</artifactId>      
    </dependency>
    
    <dependency>
            <groupId>org.kie.server</groupId>
            <artifactId>kie-server-client</artifactId>           
    </dependency>
    
     <!-- Import the Servlet API, we use provided scope as the API is 
            included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
	
    
  </dependencies>
  
  <repositories>
        <repository>
            <id>redhat-ga-repository</id>
            <url>http://maven.repository.redhat.com/ga/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>redhat-ea-repository</id>
            <url>http://maven.repository.redhat.com/earlyaccess/all/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>redhat-tp-repository</id>
            <url>http://maven.repository.redhat.com/techpreview/all</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

  <build>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
        </plugin>
        
        <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <warSourceDirectory>src/main/webapp</warSourceDirectory>
          
          <webResources>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>src/main/resources</directory>
              <targetPath>WEB-INF/classes</targetPath>
            </resource>
          </webResources>
          
          <outputDirectory>${project.build.directory}/../../deployments</outputDirectory>
          
        </configuration>
      </plugin>
        
      </plugins>
  </build>
</project>
